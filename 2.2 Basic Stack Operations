import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

import static java.lang.System.in;

public class BasicStackOperations {
    public static void main(String[] args) {
        Scanner scan = new Scanner(in);
        //n -> number of elements to push onto the stack
        //s -> number of elements to pop from the stack
        //x -> that you should check whether is present in the stack

        ArrayDeque<Integer> stack = new ArrayDeque<>();

       String[] input = scan.nextLine().split(" ");
        int n = Integer.parseInt(input[0]);
        int s = Integer.parseInt(input[1]);
        int x = Integer.parseInt(input[2]);

       // String[] numbersToPush = scan.nextLine().split("//s+");
        int[] numberss = Arrays.stream(scan.nextLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();

        //push number to stack
        for (int i = 0; i < n; i++) {
            stack.push(numberss[i]);
        }
        // number wich pop
        for (int j = 0; j < s; j++) {
            stack.pop();
        }
        if(stack.isEmpty()){
            System.out.println(0);
        }else if(stack.contains(x)){
            System.out.println("true");
        }else{
            System.out.println(Collections.min(stack));
          //  System.out.println(minNumber(stack));
        }
    }

    private static int minNumber(ArrayDeque<Integer> stack) {
        int min = Integer.MAX_VALUE;
        for (Integer integer : stack) {
            if(integer < min){
                min = integer;
            }
        }
        return min;
    }
}

